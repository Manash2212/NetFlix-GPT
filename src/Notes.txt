...................The NetFlix GPT................

   ðŸ”°Part-1
#1 - Fist Create A React app 
#2 - Configured Tailwind Css

   ðŸ”°Part-2
#3 - Create Body is a Parent Component
#4 - Set routing part in body
#5 - Create Login form and set the Header, and also use Conditional Rendaring using UseState, 
    (By Default you will be Redirecting to Sign In Option and If you click Sign Up Ooption then then the Form will be Changed.)  

   ðŸ”°Part-3 (Time - 2.28.0 min time Left)
#6 - Handleing Form Validation and Using useRef Hooks
#7 - Using handleButtonClick function to check what will happen if users Press Sign in or Sign Ups button
#8 - Create utility file inside utils, name : Validate.js, in this file we will be program about form
     Validating - and if the validate fails then it will give us an Error message.
#9 - Authentication for Sign in / Sign Up
#10 - Using Google Firebase for Authentication
#11 - Steps to Deploy our Apps to the Firebase

      - First we have to create an Account into the Firebase
      - Create a Progect and Install the Required Command (specified)
      - Come back to the VsCode and try to Login the Firebase
      - At the Login time we coud have get some Error Like this- 
         ðŸ’«C:\Users\Manash\AppData\Roaming\npm\firebase.ps1      
            cannot be loaded because running scripts is disabled  
            on this system. For more information, see 
            about_Execution_Policies at 
            + ~~~~~~~~
                + CategoryInfo          : SecurityError: (:) [],
                + FullyQualifiedErrorId : UnauthorizedAccess
      - [[ To solve the Error run some Command in terminal
         1st -  //set-ExecutionPolset-ExecutionPolicy
         2nd - // Get-ExecutionPolicy
         3rd - // Get-ExecutionPolicy -list ]]

      - Then again run, **firebase login --no-localhost**
      - Then Step by step we wll be initialized the firebase with the VsCode
      - at the configuration time a qustion will be asked for create a new folder by firebase: 
         : What do you want to use as your public directory?: build

   ðŸ”°Part-5 (Time - 1.26.40 min time Left)

#12 - Authentication for Sign Up and Sign In form. 
#13 - First check teh firebase docs, in there describe it the logic For Sign Up and Sign In.
#14 - For Sign Up 
      - We have to import the Sign Up Logic, More import things is there is a line "const auth = getAuth()"
        which we have to import form firebase/auth.
      - After Complete the coding, check the user are registered or not in firebase.  
#15 - For Sign In
      - the Logic is same.(check Firebase Documentation)

   ðŸ”°Part-6 (Time - 1.3.10 min time Left) 

#16 - Deploying our Apps to Firebase
#17 - Steps to Deploy our App to Firebase 
      - 1 > Firebase Login
      - 2 > Firebase init
      - 3 > Firebase Deploy
#18 - Now Installing Redux Toolkit and react-redux for storing the user Data.
#19 - Creatrd userSlice and appStore and Provided the appStore in App.js Component
#20 - Now to send the data to redux store, we have to dispatch an Action on everytime when sign in or sign Up
      so, to get Raid of this.

      ðŸ”°Part-7

#21 - Now i have Implemented the Dropdown menu in Header Component
#22 - At there i have Implemented Sign Out Features. 


      ðŸ”°Part-8

#23 - Now update the user Details in Redux store after a successful Sign Up or Sign in which Implemented in Login Component.
#24 - And also use the useSelector Hooks in Header for featching the user Details.

      ðŸ”°Part-9 (2nd Video - Building the Core)

#25 - It's Time to Solve some bug in Our App.
#26 - What is the Bug-1? :- Suppose I'm in Sign in OR Sign Up page, without login i can still access the 
      /browse page, which i should not be able to access the browse page. 
#27 - And:- without Sign Out I can still access the Sign In and Sign Up page. Which should not be happen.

#28 - Solution for Bug-1...!
#29 - as we know onAuthStateChange is a kind of eventListener Which will check always the current user, when it is Sign up or Signed in or signed out , so if we try to nevigate from the onAuthStateChange which is inside useEffect function, we will not be able to do that, because if we nevigate from the onAuthStateChange then function should be inside the <RoterProvider>, so in Body Component ther is no possible to keep stroe this function in <RoterProvider>, so if we nevigate from the onAuthStateChange then we have to keep it a Component which is present in my whole app and it is also in <RoterProvider>,  

#30 - So, as we know the Header Component is present in my whole app as well as, it is inside <RoterProvider>, so we take it out the onAuthStateChange function from Body to Header Component and nevigateing the route form ther only. and we don't need to write seperate logic in Login page and as well as the Sign out function.



   
      ðŸ”°Part-10 (Unsubscribing onAuthStateChange)

#31 - why we Unsubscribing the onAuthStateChange? 
#32 - Ans :- because "onAuthStateChanged" is kind of a eventListener, it works when the Auth is Changed.
      When the "Header" Component will unload after that it will Unsubscribe the "onAuthStateChanged".
      That means it will track when the user Sign Up - Sign In OR Sign Out. after that the Component will Unmount.
      So, if i Unsubscribe the Component it will basically Unmount.

